
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$menu40web-primary: mat.define-palette(mat.$indigo-palette);
$menu40web-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$menu40web-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$menu40web-theme: mat.define-light-theme((
  color: (
    primary: $menu40web-primary,
    accent: $menu40web-accent,
    warn: $menu40web-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($menu40web-theme);


// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
//@use '~@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$menu40web-primary: mat.define-palette(mat.$indigo-palette);
$menu40web-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$menu40web-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$menu40web-theme: mat.define-light-theme((
  color: (
    primary: $menu40web-primary,
    accent: $menu40web-accent,
    warn: $menu40web-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($menu40web-theme);

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
.table {
  margin-bottom: 0;
}

.default-min-height {
  min-height: 450px;
}
html, body {
  height: 100%;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
 }
 footer{
  margin-top: auto;
 }
 app-footer, app-adm-footer{
  margin-top: auto;
 }
 app-product,
 app-business,
 app-menu,
 app-branchoffice{
  display: flex;
  flex-direction: column;
  height: 100%;
  min-height: 50vh;
}
mat-drawer-container{
  flex-direction: column;
  display: flex;
  height: 100%;
  min-height: 59vh;
}

body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
